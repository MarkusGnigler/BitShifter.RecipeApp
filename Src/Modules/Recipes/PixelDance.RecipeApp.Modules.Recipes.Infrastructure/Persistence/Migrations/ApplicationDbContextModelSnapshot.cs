// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PixelDance.Modules.Recipes.Infrastructure.Persistence;

#nullable disable

namespace PixelDance.Modules.Recipes.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("recipes")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PixelDance.Modules.Recipes.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories", "recipes");
                });

            modelBuilder.Entity("PixelDance.Modules.Recipes.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Img")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<bool>("Liked")
                        .HasColumnType("boolean");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<string>("Preparation")
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes", "recipes");
                });

            modelBuilder.Entity("PixelDance.Modules.Recipes.Domain.Entities.Recipe", b =>
                {
                    b.HasOne("PixelDance.Modules.Recipes.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.OwnsMany("PixelDance.Modules.Recipes.Domain.Entities.Ingredient", "Ingredients", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Priority")
                                .HasColumnType("integer");

                            b1.Property<double>("Quantity")
                                .HasColumnType("double precision");

                            b1.Property<string>("Title")
                                .HasColumnType("text");

                            b1.Property<string>("Unit")
                                .HasColumnType("text");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("Ingredient", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsOne("PixelDance.Shared.Kernel.ValueObjects.PersonFullName", "PersonName", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uuid");

                            b1.Property<string>("FirstName")
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("character varying(300)")
                                .HasDefaultValue("")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(300)
                                .HasColumnType("character varying(300)")
                                .HasDefaultValue("")
                                .HasColumnName("LastName");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("Category");

                    b.Navigation("Ingredients");

                    b.Navigation("PersonName");
                });
#pragma warning restore 612, 618
        }
    }
}
